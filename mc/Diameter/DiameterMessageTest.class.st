Class {
	#name : 'DiameterMessageTest',
	#superclass : 'TestCase',
	#category : 'Diameter-Tests',
	#package : 'Diameter',
	#tag : 'Tests'
}

{ #category : 'as yet unclassified' }
DiameterMessageTest class >> diameterCreditControl [
	^ByteArray readHexFrom: '0100030cc0000110010000162c0001c793c4269e000001074000002c63302d3137322d32352d33372d332d6767736e3937313b313339373130373030343b3735000000086000000cac1aa10d0000001e600000116f637370726f646770000000000001026000000c01000016000001084000001e63302d3137322d32352d33372d332d6767736e3937310000000001166000000c000000020000011a4000001e63302d3137322d32352d33372d332d6767736e39373100000000011b600000157531736470312e6f63612e677000000000000128400000126f63732e6f63612e677000000000019f6000000c00000000000001a06000000c00000001000001bb40000028000001c26000000c00000000000001bc60000014353936363936333130333634000001bb4000002c000001c26000000c00000001000001bc6000001733343030313937303237343735303800000001ca6000002c000001cb2000000c00000000000001cc20000018333538323430303332323433373334380000042480000010000000c10001000100000006e0000010000028afc1fba4a100000012e0000011000028af333430303100000000000015e000000d000028af0100000000000017c000000e000028af69000000000001f5c0000012000028af0001c1fba48300000000027480000038000028af0000010a4000000c000028af0000027580000010000028af000000010000027680000010000028af000000030000038dc0000017000028af333430303166666665666600000003e8c0000010000028af00000000000003f8c0000058000028af00000404c0000010000028af0000000600000203c0000010000028af0083d60000000204c0000010000028af003d86000000040ac000001c000028af0000041680000010000028af00000001000003fcc000000d000028af35000000000003fdc0000010000028af00000001000003fec0000020000028af000001f7c0000014000028af343634383731323000000403c0000010000028af0000000000000406c0000010000028af000000010000040880000010000028af000003e8'
]

{ #category : 'tests' }
DiameterMessageTest >> testBasicParsing [
	| diameter data |
	diameter := DiameterMessage parseFrom: self class diameterCreditControl readStream.
	self assert: diameter isRequest.
	self assert: diameter isProxyable.
	self deny: diameter isError.
	self deny: diameter isPotentialRetransmit.
	self assert: diameter commandCode equals: 272.
	self assert: diameter applicationId equals: 16777238.
	self assert: diameter hopByHopId equals: 16r2c0001c7.
	self assert: diameter endToEndId equals: 16r93c4269e.
	self assert: diameter avps size equals: 30.

	data := ByteArray streamContents: [:str |
		diameter encodeOn: str].
	self assert: data equals: self class diameterCreditControl.
]
